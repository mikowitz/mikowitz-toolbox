h1. Mikowitz's Toolbox

Based on an idea by "John Trupiano":http://www.github.com/jtrupiano/johns-toolbox, this is a (currently very) small repository of some custom scripts that I use with some degree of regularity.

h2. myack

My preferred output configuration for ack results. Other ack options can be passed as normal.


h2. dbymls

Quickly create database.yml files for the development and test environments in an "environmentalized":http://www.github.com/jtrupiano/environmentalist Rails app.

<code>~$ dbymls my_app</code> 

in the root directory of a rails app will create database.yml files pointing to mysql databases "my_app_dev" and "my_app_test."

<code>~$ dbymls my_app username pass</code> 

will interpret the 2nd and/or 3rd arguments to be the mysql username (and password optionally) you want to access these database as, and will create the databases "my_app_dev" and "my_app_test" in mysql. If only one argument is passed to dbymls, no mysql databases will be created.

h2. parse_vc_branch

A custom shell prompt that will provide information about the status of a local Git or SVN repository relative to the remote HEAD.

The code for git output is from "Thomas Mayfield":http://github.com/thegreatape/dot-files.

h4. Git:

In a clean working directory
<code>/path/to/git/repo (master) $</code>

With one local commit ahead of the remote
<code>/path/to/git/repo (master+1) $</code>


h4. SVN:

In a clean working directory
<code>/path/to/svn/repo depth:0 (clean) $</code>

With 1 added file, 2 deleted files, 3 modified files, and 1 untracked file. In the shell, these numbers are colorized, and show stats relative to the root of the current project, rather than the current subdirectory.
<code>/path/to/svn/repo depth:0 ( 1 2 3 1 ) $</code>

In a directory with 3 conflicted files
<code>/path/to/svn/repo depth:0 ( 3 conflicted files) $</code>

h4. Usage:

Add the line <code>source /path/to/parse_vc_branch</code> to your .bashrc, etc. file

h2. svnroot

Returns you to the root directory of your current SVN project.

h2. svnst

Runs <code>ack $1</code> on <code>svn st</code> results.

h4. For example

Running <code>$ svnst C</code> returns a list of all conflicted files in your current SVN directory.